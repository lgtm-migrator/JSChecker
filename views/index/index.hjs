<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>JSChecker</title>
    <!-- <script src='https://www.google.com/recaptcha/api.js'></script> -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/bootstrapextra.css">
</head>

<body>
    <div class="container">

        <div class="row">
            <div class="col-lg-1"></div>
            <div class="col-lg-10">
                <h1>JS Checker</h1>
                <hr>
                <form name="form1" id="form1">
                    <div class="input-group">
                        <input type="text" id="url" name="url" class="form-control" placeholder="Enter Javascript URL...">
                        <span class="input-group-btn">
                    <button class="btn btn-primary" id="send" type="button">Check</button>
                  </span>
                    </div>
                </form>
                <br>

                <div id="pbar"></div>

                <div id="urlref"></div>

                <div id="result"></div>
                <div id="output"></div>
                <div id="note"></div>
                <div id="info"></div>
                <div id="error"></div>
                <br>

            </div>
            <div class="col-lg-1"></div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>

    <script>
        var interval;
        var urlRefdiv = '';

        if (window.location.pathname.startsWith('/info/')) {
            document.getElementById('pbar').innerHTML = '<div class="progress"><div id="progressbar" class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:0%"></div></div>';

            var pathname = window.location.pathname;
            var path = pathname.split('/');

            checkEvaluationStatus(path[2]);
        }

        function updateProgessBar(percentage) {
            var pbar = document.getElementById("progressbar");
            pbar.setAttribute("aria-valuenow", percentage);
            pbar.setAttribute("style", "width:" + percentage + "%");
            pbar.innerHTML = percentage + "% Complete";
        }

        function checkEvaluationStatus(id) {

            $.get("/status/" + id, function(data) {

                console.log(data);
                data = JSON.parse(data);

                if (data && data.status === false) {

                    window.clearInterval(interval);
                    document.getElementById('error').innerHTML = "";
                    document.getElementById('info').innerHTML = "";
                    document.getElementById('note').innerHTML = "";
                    var callout = document.createElement('div');
                    var calloutatt = document.createAttribute("class");
                    calloutatt.value = "bs-callout bs-callout-danger";
                    callout.setAttributeNode(calloutatt);

                    var calloutheader = document.createElement('h4');
                    calloutheader.innerHTML = "Error ";

                    var calloutmessage = document.createElement('p');
                    calloutmessage.innerHTML = "<b>Note:</b> <code> " + data.message + "<br>";

                    if (data.invalidurls) {
                        for (var i = 0; i < data.invalidurls.length; i++) {
                            calloutmessage.innerHTML += '<br>' + data.invalidurls[i];
                        }
                    }

                    callout.appendChild(calloutheader);
                    callout.appendChild(calloutmessage);

                    document.getElementById('error').appendChild(callout);
                    updateProgessBar(100);

                } else if (data && data.status === 'info') {
                    document.getElementById('info').innerHTML = "";

                    var callout = document.createElement('div');
                    var calloutatt = document.createAttribute("class");
                    calloutatt.value = "bs-callout bs-callout-info";
                    callout.setAttributeNode(calloutatt);

                    var calloutheader = document.createElement('h4');
                    calloutheader.innerHTML = "Processing...";

                    var calloutmessage = document.createElement('p');
                    calloutmessage.innerHTML = "<b>Note:</b> <code> " + data.message + "<br>";

                    callout.appendChild(calloutheader);
                    callout.appendChild(calloutmessage);

                    document.getElementById('info').appendChild(callout);
                    document.getElementById('queueno').innerHTML = "<code>" + data.queue + "</code>";

                    var currentProgressBarValue = parseInt(document.getElementById('progressbar').innerHTML.split('%')[0]);
                    var progressBarValue = currentProgressBarValue + ((98 - currentProgressBarValue) / data.queue);
                    updateProgessBar(progressBarValue.toFixed(2));

                } else if (data && data.status === true) {

                    if(document.getElementById('output').innerHTML === "" && document.getElementById('error').innerHTML === ""){
                        window.clearInterval(interval);
                        document.getElementById('info').innerHTML = "";
                        document.getElementById('note').innerHTML = "";
                        document.getElementById('error').innerHTML = "";
                        document.getElementById('output').innerHTML = "<h3>Sub Resource Integrity</h3>";
                        data = data.sri;

                        var tableObject = document.createElement('table');
                        var allCallouts = document.createElement('div');

                        var att = document.createAttribute("class");
                        att.value = "table";
                        tableObject.setAttributeNode(att);

                        var thead = document.createElement('thead');
                        var attrclass = document.createAttribute("class");
                        attrclass.value = "bg-primary";
                        thead.setAttributeNode(attrclass);

                        var headrow = document.createElement('tr');
                        var col1 = document.createElement('th');
                        col1.innerHTML = "#";
                        var col2 = document.createElement('th');
                        col2.innerHTML = "URL";
                        var col3 = document.createElement('th');
                        col3.innerHTML = "Integrity";
                        var col4 = document.createElement('th');
                        col4.innerHTML = "Supported Domains";

                        headrow.appendChild(col1);
                        headrow.appendChild(col2);
                        headrow.appendChild(col3);
                        headrow.appendChild(col4);

                        thead.appendChild(headrow);

                        var tbody = document.createElement('tbody');

                        for (var i = 0; i < data.length; i++) {
                            var callouts = document.createElement('div');
                            var calloutatt = document.createAttribute("class");
                            var calloutheader = document.createElement('h4');
                            var calloutmessage = document.createElement('p');
                            var calloutHeaderText = document.createElement('p');

                            var row = document.createElement('tr');
                            var col4 = document.createElement('td');

                            if (data[i].headersInfo.status === 0) {

                                var att = document.createAttribute("class");
                                att.value = "bg-danger";
                                row.setAttributeNode(att);
                                col4.innerHTML = 'None';

                                calloutatt.value = "bs-callout bs-callout-danger";
                                calloutmessage.innerHTML = "<b>Note:</b> <code>Access-Control-Allow-Origin</code> header not found. Integrity check for this file cannot be done.";
                            } else if (data[i].headersInfo.status === 1) {
                                var att = document.createAttribute("class");
                                att.value = "bg-success";
                                row.setAttributeNode(att);
                                col4.innerHTML = 'All Domains';

                                calloutatt.value = "bs-callout bs-callout-success";
                                calloutmessage.innerHTML = "<b>Note:</b> Everything looks good. You can use the integrity now.";
                            } else {
                                var att = document.createAttribute("class");
                                att.value = "bg-warning";
                                row.setAttributeNode(att);
                                col4.innerHTML = data[i].headersInfo.allowedDomains;

                                calloutatt.value = "bs-callout bs-callout-warning";
                                calloutmessage.innerHTML = "<b>Note:</b> Only domains mentioned above are allowed to do integrity check for this file.";
                            }

                            var col1 = document.createElement('td');
                            col1.innerHTML = i + 1;
                            var col2 = document.createElement('td');
                            col2.innerHTML = data[i].url;
                            var col3 = document.createElement('td');
                            col3.innerHTML = data[i].integrity;

                            row.appendChild(col1);
                            row.appendChild(col2);
                            row.appendChild(col3);
                            row.appendChild(col4);

                            tbody.appendChild(row);

                            callouts.setAttributeNode(calloutatt); // Adding Callout attribute to callout

                            calloutheader.innerHTML = data[i].url;
                            callouts.appendChild(calloutheader);

                            callouts.appendChild(calloutmessage);

                            var calloutHeaderTextMessage = "<h5>Response Headers:</h5>";
                            var urlHeadersLength = data[i].headersInfo.headers.length;

                            for (var j = 0; j < urlHeadersLength; j++) {
                                calloutHeaderTextMessage += '<b>' + data[i].headersInfo.headers[j].name + ': </b>' + data[i].headersInfo.headers[j].value + '</br>';
                            }

                            calloutHeaderText.innerHTML = calloutHeaderTextMessage;
                            callouts.appendChild(calloutHeaderText);

                            allCallouts.appendChild(callouts);

                        }

                        tableObject.appendChild(thead);
                        tableObject.appendChild(tbody);

                        document.getElementById('urlref').innerHTML = urlRefdiv;

                        document.getElementById('output').appendChild(tableObject);
                        document.getElementById('output').appendChild(allCallouts);

                        updateProgessBar(100);
                    }
                }

            });
        }

        function start(event){
            document.getElementById('pbar').innerHTML = '<div class="progress"><div id="progressbar" class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:0%"></div></div>';

            updateProgessBar(0);
            document.getElementById('note').innerHTML = "";
            document.getElementById('info').innerHTML = "";
            document.getElementById('output').innerHTML = "";
            document.getElementById('error').innerHTML = "";
            document.getElementById('urlref').innerHTML = "";

            var url = document.getElementById('url').value;

            if (!url) {
                alert('Improper URL');
            } else {
                updateProgessBar(20);

                $.get("/evaluate?url=" + url, function(queueData) {
                    window.clearInterval(interval);
                    globalObjStatus = 0;
                    queueData = JSON.parse(queueData);
                    if (queueData && queueData.status) {
                        updateProgessBar(30);
                        console.log(queueData);
                        var queueCallout = document.createElement('div');
                        var queueCalloutatt = document.createAttribute("class");
                        queueCalloutatt.value = "bs-callout bs-callout-info";
                        queueCallout.setAttributeNode(queueCalloutatt);

                        var queuecalloutheader = document.createElement('h4');
                        queuecalloutheader.innerHTML = "Note:";

                        var queuecalloutmessage = document.createElement('p');

                        var urlForRef = window.location.protocol + "//";
                        if (window.location.port !== "") {
                            urlForRef += window.location.hostname + ":" + window.location.port + "/info/" + queueData.id;
                        } else {
                            urlForRef += window.location.hostname + "/info/" + queueData.id;
                        }
                        queuecalloutmessage.innerHTML = "<b>Queue: </b> <code id=\"queueno\"> " + queueData.queue + " </code> <br> <br><b>ID: </b> <code> " + queueData.id +
                            " </code> <br><br> <b>URL (Valid For: 24 Hrs): </b> <code> " + urlForRef + "</code>";

                        queueCallout.appendChild(queuecalloutheader);
                        queueCallout.appendChild(queuecalloutmessage);

                        document.getElementById('note').appendChild(queueCallout);

                        urlRefdiv = '<div class="bs-callout bs-callout-info"> <h4>Information</h4> <b>URL (Valid For: 24 Hrs): </b> <code> ' + urlForRef + '</code></div>';
                        checkEvaluationStatus(queueData.id);

                        interval = setInterval(function() {
                            console.log('Resending Request');
                            checkEvaluationStatus(queueData.id);
                        }, 3000);
                    }
                });
            }
        }

        document.getElementById('send').addEventListener('click', start);
        document.getElementById('form1').addEventListener('submit', function(event){
            event.preventDefault();
            start(event);
        });
    </script>
</body>

</html>
